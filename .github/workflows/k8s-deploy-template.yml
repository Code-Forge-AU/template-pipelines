name: Reusable Kubernetes Deployment Workflow

on:
  workflow_call:
    inputs:
      services:
        description: 'JSON string of services to build and deploy'
        required: true
        type: string
      pulumi_stack:
        description: 'Pulumi stack name'
        required: true
        type: string
      pulumi_work_dir:
        description: 'Directory containing Pulumi project'
        required: true
        type: string
      pulumi_access_token:
        required: true
        type: string

jobs:
  build_push_and_deploy:
    name: Build, Push, and Deploy
    runs-on: [j8s-vps]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and Push Docker Images
        env:
          SERVICES_JSON: ${{ inputs.services }}
        run: |
          # Parse the JSON string into an array
          services_array=$(echo "$SERVICES_JSON" | jq -c '.[]')
          
          # Loop through each service
          echo "$services_array" | while read -r service; do
            # Extract service information
            service_name=$(echo $service | jq -r '.name')
            build_dir=$(echo $service | jq -r '.dir')
            dockerfile=$(echo $service | jq -r '.dockerfile')
            
            echo "Building $service_name from $build_dir using $dockerfile"
            
            # Change to the build directory
            cd "$GITHUB_WORKSPACE/$build_dir" || exit 1
            
            # Build the Docker image
            docker build -f "$dockerfile" -t "$service_name:latest" .
            
            # Tag the image for the local registry
            docker tag "$service_name:latest" "localhost:32000/$service_name:latest"
            
            # Push the image to the local registry
            docker push "localhost:32000/$service_name:latest"
            
            # Return to the workspace root
            cd "$GITHUB_WORKSPACE" || exit 1
          done
        shell: /usr/bin/bash -e {0}

      - name: Deploy with Pulumi
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: ${{ inputs.pulumi_stack }}
          work-dir: ${{ inputs.pulumi_work_dir }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ inputs.pulumi_access_token }}