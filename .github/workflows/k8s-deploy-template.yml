name: Reusable Kubernetes Deployment Workflow

on:
  workflow_call:
    inputs:
      services:
        description: 'List of services to build and deploy'
        required: true
        type: string
      pulumi_stack:
        description: 'Pulumi stack name'
        required: true
        type: string
      pulumi_work_dir:
        description: 'Directory containing Pulumi project'
        required: true
        type: string

jobs:
  build_push_and_deploy:
    name: Build, Push, and Deploy
    runs-on: [j8s-vps]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and Push Docker Images
        run: |
            # Read the multi-line input into an array
            IFS=$'\n' read -d '' -r -a services_array <<< "${{ inputs.services }}"
            
            # Loop through each service
            for service in "${services_array[@]}"
            do
            # Split the service info into an array
            IFS=',' read -ra service_info <<< "$service"
            
            # Extract service information
            service_name="${service_info[0]}"
            build_dir="${service_info[1]}"
            dockerfile="${service_info[2]}"
            
            echo "Building $service_name from $build_dir using $dockerfile"
            
            # Change to the build directory
            cd "$GITHUB_WORKSPACE/$build_dir"
            
            # Build the Docker image
            docker build -f "$dockerfile" -t "$service_name:latest" .
            
            # Tag the image for the local registry
            docker tag "$service_name:latest" "localhost:32000/$service_name:latest"
            
            # Push the image to the local registry
            docker push "localhost:32000/$service_name:latest"
            
            # Return to the workspace root
            cd "$GITHUB_WORKSPACE"
            done
        shell: /usr/bin/bash -e {0}

      - name: Deploy with Pulumi
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: ${{ inputs.pulumi_stack }}
          work-dir: ${{ inputs.pulumi_work_dir }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}